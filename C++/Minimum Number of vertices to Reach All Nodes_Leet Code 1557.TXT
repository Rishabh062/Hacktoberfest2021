Minimum Number of Vertices to Reach All Nodes
-----------------------------------------------------------------------------------------
Given a directed acyclic graph, with n vertices numbered from 0 to n-1, and an array edges where edges[i] = [fromi, toi] represents a directed edge from node fromi to node toi.

Find the smallest set of vertices from which all nodes in the graph are reachable. It's guaranteed that a unique solution exists.
-----------------------------------------------------------------------------------------
class Solution {
public:
    vector<int> findSmallestSetOfVertices(int n, vector<vector<int>>& edges) 
    {
        vector<int> indegree(n,0);
        vector<int>res;
        for(int i=0;i<edges.size();i++)
        {
            int x=edges[i][1];
            indegree[x]++;
        }
        for(int i=0;i<indegree.size();i++)
        {
            cout<<indegree[i]<<"  ";
            if(indegree[i]==0)
            {
                res.push_back(i);
            }
        }
        return res;
    }
};